package com.wangyy.erp.erp.public_.供应商.generated;

import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.Manager;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.IntForeignKeyField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;
import com.wangyy.erp.erp.public_.会员.会员;
import com.wangyy.erp.erp.public_.供应商.供应商;

/**
 * The generated base for the {@link
 * com.wangyy.erp.erp.public_.供应商.供应商}-interface representing entities of the
 * {@code 供应商}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface Generated供应商 {
    
    /**
     * This Field corresponds to the {@link 供应商} field that can be obtained
     * using the {@link 供应商#get商户详情()} method.
     */
    StringField<供应商, String> 商户详情 = StringField.create(
        Identifier.商户详情,
        供应商::get商户详情,
        供应商::set商户详情,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link 供应商} field that can be obtained
     * using the {@link 供应商#get会员编号()} method.
     */
    IntForeignKeyField<供应商, Integer, 会员> 会员编号 = IntForeignKeyField.create(
        Identifier.会员编号,
        供应商::get会员编号,
        供应商::set会员编号,
        会员.会员标识,
        TypeMapper.primitive(),
        false
    );
    /**
     * This Field corresponds to the {@link 供应商} field that can be obtained
     * using the {@link 供应商#get商号码()} method.
     */
    IntField<供应商, Integer> 商号码 = IntField.create(
        Identifier.商号码,
        供应商::get商号码,
        供应商::set商号码,
        TypeMapper.primitive(),
        true
    );
    
    /**
     * Returns the 商户详情 of this 供应商. The 商户详情 field corresponds to the database
     * column erp.public.供应商.商户详情.
     * 
     * @return the 商户详情 of this 供应商
     */
    String get商户详情();
    
    /**
     * Returns the 会员编号 of this 供应商. The 会员编号 field corresponds to the database
     * column erp.public.供应商.会员编号.
     * 
     * @return the 会员编号 of this 供应商
     */
    int get会员编号();
    
    /**
     * Returns the 商号码 of this 供应商. The 商号码 field corresponds to the database
     * column erp.public.供应商.商号码.
     * 
     * @return the 商号码 of this 供应商
     */
    int get商号码();
    
    /**
     * Sets the 商户详情 of this 供应商. The 商户详情 field corresponds to the database
     * column erp.public.供应商.商户详情.
     * 
     * @param 商户详情 to set of this 供应商
     * @return     this 供应商 instance
     */
    供应商 set商户详情(String 商户详情);
    
    /**
     * Sets the 会员编号 of this 供应商. The 会员编号 field corresponds to the database
     * column erp.public.供应商.会员编号.
     * 
     * @param 会员编号 to set of this 供应商
     * @return     this 供应商 instance
     */
    供应商 set会员编号(int 会员编号);
    
    /**
     * Sets the 商号码 of this 供应商. The 商号码 field corresponds to the database
     * column erp.public.供应商.商号码.
     * 
     * @param 商号码 to set of this 供应商
     * @return    this 供应商 instance
     */
    供应商 set商号码(int 商号码);
    
    /**
     * Queries the specified manager for the referenced 会员. If no such 会员
     * exists, an {@code NullPointerException} will be thrown.
     * 
     * @param foreignManager the manager to query for the entity
     * @return               the foreign entity referenced
     */
    会员 find会员编号(Manager<会员> foreignManager);
    
    enum Identifier implements ColumnIdentifier<供应商> {
        
        商户详情 ("商户详情"),
        会员编号 ("会员编号"),
        商号码  ("商号码");
        
        private final String columnId;
        private final TableIdentifier<供应商> tableIdentifier;
        
        Identifier(String columnId) {
            this.columnId        = columnId;
            this.tableIdentifier = TableIdentifier.of(    getDbmsId(), 
                getSchemaId(), 
                getTableId());
        }
        
        @Override
        public String getDbmsId() {
            return "erp";
        }
        
        @Override
        public String getSchemaId() {
            return "public";
        }
        
        @Override
        public String getTableId() {
            return "供应商";
        }
        
        @Override
        public String getColumnId() {
            return this.columnId;
        }
        
        @Override
        public TableIdentifier<供应商> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}