package com.wangyy.erp.erp.public_.字典.generated;

import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.util.OptionalUtil;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;
import com.wangyy.erp.erp.public_.字典.字典;

import java.util.Optional;

/**
 * The generated base for the {@link com.wangyy.erp.erp.public_.字典.字典}-interface
 * representing entities of the {@code 字典}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface Generated字典 {
    
    /**
     * This Field corresponds to the {@link 字典} field that can be obtained using
     * the {@link 字典#get类别()} method.
     */
    StringField<字典, String> 类别 = StringField.create(
        Identifier.类别,
        字典::get类别,
        字典::set类别,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link 字典} field that can be obtained using
     * the {@link 字典#get会员()} method.
     */
    IntField<字典, Integer> 会员 = IntField.create(
        Identifier.会员,
        字典::get会员,
        字典::set会员,
        TypeMapper.primitive(),
        false
    );
    /**
     * This Field corresponds to the {@link 字典} field that can be obtained using
     * the {@link 字典#get字典值()} method.
     */
    StringField<字典, String> 字典值 = StringField.create(
        Identifier.字典值,
        o -> OptionalUtil.unwrap(o.get字典值()),
        字典::set字典值,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link 字典} field that can be obtained using
     * the {@link 字典#get标识号()} method.
     */
    IntField<字典, Integer> 标识号 = IntField.create(
        Identifier.标识号,
        字典::get标识号,
        字典::set标识号,
        TypeMapper.primitive(),
        true
    );
    
    /**
     * Returns the 类别 of this 字典. The 类别 field corresponds to the database
     * column erp.public.字典.类别.
     * 
     * @return the 类别 of this 字典
     */
    String get类别();
    
    /**
     * Returns the 会员 of this 字典. The 会员 field corresponds to the database
     * column erp.public.字典.会员.
     * 
     * @return the 会员 of this 字典
     */
    int get会员();
    
    /**
     * Returns the 字典值 of this 字典. The 字典值 field corresponds to the database
     * column erp.public.字典.字典值.
     * 
     * @return the 字典值 of this 字典
     */
    Optional<String> get字典值();
    
    /**
     * Returns the 标识号 of this 字典. The 标识号 field corresponds to the database
     * column erp.public.字典.标识号.
     * 
     * @return the 标识号 of this 字典
     */
    int get标识号();
    
    /**
     * Sets the 类别 of this 字典. The 类别 field corresponds to the database column
     * erp.public.字典.类别.
     * 
     * @param 类别 to set of this 字典
     * @return   this 字典 instance
     */
    字典 set类别(String 类别);
    
    /**
     * Sets the 会员 of this 字典. The 会员 field corresponds to the database column
     * erp.public.字典.会员.
     * 
     * @param 会员 to set of this 字典
     * @return   this 字典 instance
     */
    字典 set会员(int 会员);
    
    /**
     * Sets the 字典值 of this 字典. The 字典值 field corresponds to the database column
     * erp.public.字典.字典值.
     * 
     * @param 字典值 to set of this 字典
     * @return    this 字典 instance
     */
    字典 set字典值(String 字典值);
    
    /**
     * Sets the 标识号 of this 字典. The 标识号 field corresponds to the database column
     * erp.public.字典.标识号.
     * 
     * @param 标识号 to set of this 字典
     * @return    this 字典 instance
     */
    字典 set标识号(int 标识号);
    
    enum Identifier implements ColumnIdentifier<字典> {
        
        类别  ("类别"),
        会员  ("会员"),
        字典值 ("字典值"),
        标识号 ("标识号");
        
        private final String columnId;
        private final TableIdentifier<字典> tableIdentifier;
        
        Identifier(String columnId) {
            this.columnId        = columnId;
            this.tableIdentifier = TableIdentifier.of(    getDbmsId(), 
                getSchemaId(), 
                getTableId());
        }
        
        @Override
        public String getDbmsId() {
            return "erp";
        }
        
        @Override
        public String getSchemaId() {
            return "public";
        }
        
        @Override
        public String getTableId() {
            return "字典";
        }
        
        @Override
        public String getColumnId() {
            return this.columnId;
        }
        
        @Override
        public TableIdentifier<字典> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}