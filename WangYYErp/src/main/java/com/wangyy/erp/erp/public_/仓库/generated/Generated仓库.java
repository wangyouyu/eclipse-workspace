package com.wangyy.erp.erp.public_.仓库.generated;

import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.Manager;
import com.speedment.runtime.core.util.OptionalUtil;
import com.speedment.runtime.field.ComparableField;
import com.speedment.runtime.field.ComparableForeignKeyField;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;
import com.speedment.runtime.typemapper.time.TimestampToLocalDateTimeMapper;
import com.wangyy.erp.erp.public_.仓库.仓库;
import com.wangyy.erp.erp.public_.会员.会员;

import java.sql.Timestamp;
import java.time.LocalDateTime;
import java.util.Optional;
import java.util.OptionalInt;

/**
 * The generated base for the {@link com.wangyy.erp.erp.public_.仓库.仓库}-interface
 * representing entities of the {@code 仓库}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface Generated仓库 {
    
    /**
     * This Field corresponds to the {@link 仓库} field that can be obtained using
     * the {@link 仓库#get仓库标识()} method.
     */
    IntField<仓库, Integer> 仓库标识 = IntField.create(
        Identifier.仓库标识,
        仓库::get仓库标识,
        仓库::set仓库标识,
        TypeMapper.primitive(),
        true
    );
    /**
     * This Field corresponds to the {@link 仓库} field that can be obtained using
     * the {@link 仓库#get日期()} method.
     */
    ComparableField<仓库, Timestamp, LocalDateTime> 日期 = ComparableField.create(
        Identifier.日期,
        仓库::get日期,
        仓库::set日期,
        new TimestampToLocalDateTimeMapper(),
        false
    );
    /**
     * This Field corresponds to the {@link 仓库} field that can be obtained using
     * the {@link 仓库#get详情()} method.
     */
    StringField<仓库, String> 详情 = StringField.create(
        Identifier.详情,
        o -> OptionalUtil.unwrap(o.get详情()),
        仓库::set详情,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link 仓库} field that can be obtained using
     * the {@link 仓库#get库位()} method.
     */
    StringField<仓库, String> 库位 = StringField.create(
        Identifier.库位,
        o -> OptionalUtil.unwrap(o.get库位()),
        仓库::set库位,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link 仓库} field that can be obtained using
     * the {@link 仓库#get会员编码()} method.
     */
    ComparableForeignKeyField<仓库, Integer, Integer, 会员> 会员编码 = ComparableForeignKeyField.create(
        Identifier.会员编码,
        o -> OptionalUtil.unwrap(o.get会员编码()),
        仓库::set会员编码,
        会员.会员标识,
        TypeMapper.identity(),
        false
    );
    
    /**
     * Returns the 仓库标识 of this 仓库. The 仓库标识 field corresponds to the database
     * column erp.public.仓库.仓库标识.
     * 
     * @return the 仓库标识 of this 仓库
     */
    int get仓库标识();
    
    /**
     * Returns the 日期 of this 仓库. The 日期 field corresponds to the database
     * column erp.public.仓库.日期.
     * 
     * @return the 日期 of this 仓库
     */
    LocalDateTime get日期();
    
    /**
     * Returns the 详情 of this 仓库. The 详情 field corresponds to the database
     * column erp.public.仓库.详情.
     * 
     * @return the 详情 of this 仓库
     */
    Optional<String> get详情();
    
    /**
     * Returns the 库位 of this 仓库. The 库位 field corresponds to the database
     * column erp.public.仓库.库位.
     * 
     * @return the 库位 of this 仓库
     */
    Optional<String> get库位();
    
    /**
     * Returns the 会员编码 of this 仓库. The 会员编码 field corresponds to the database
     * column erp.public.仓库.会员编码.
     * 
     * @return the 会员编码 of this 仓库
     */
    OptionalInt get会员编码();
    
    /**
     * Sets the 仓库标识 of this 仓库. The 仓库标识 field corresponds to the database
     * column erp.public.仓库.仓库标识.
     * 
     * @param 仓库标识 to set of this 仓库
     * @return     this 仓库 instance
     */
    仓库 set仓库标识(int 仓库标识);
    
    /**
     * Sets the 日期 of this 仓库. The 日期 field corresponds to the database column
     * erp.public.仓库.日期.
     * 
     * @param 日期 to set of this 仓库
     * @return   this 仓库 instance
     */
    仓库 set日期(LocalDateTime 日期);
    
    /**
     * Sets the 详情 of this 仓库. The 详情 field corresponds to the database column
     * erp.public.仓库.详情.
     * 
     * @param 详情 to set of this 仓库
     * @return   this 仓库 instance
     */
    仓库 set详情(String 详情);
    
    /**
     * Sets the 库位 of this 仓库. The 库位 field corresponds to the database column
     * erp.public.仓库.库位.
     * 
     * @param 库位 to set of this 仓库
     * @return   this 仓库 instance
     */
    仓库 set库位(String 库位);
    
    /**
     * Sets the 会员编码 of this 仓库. The 会员编码 field corresponds to the database
     * column erp.public.仓库.会员编码.
     * 
     * @param 会员编码 to set of this 仓库
     * @return     this 仓库 instance
     */
    仓库 set会员编码(Integer 会员编码);
    
    /**
     * Queries the specified manager for the referenced 会员. If no such 会员
     * exists, an {@code NullPointerException} will be thrown.
     * 
     * @param foreignManager the manager to query for the entity
     * @return               the foreign entity referenced
     */
    Optional<会员> find会员编码(Manager<会员> foreignManager);
    
    enum Identifier implements ColumnIdentifier<仓库> {
        
        仓库标识 ("仓库标识"),
        日期   ("日期"),
        详情   ("详情"),
        库位   ("库位"),
        会员编码 ("会员编码");
        
        private final String columnId;
        private final TableIdentifier<仓库> tableIdentifier;
        
        Identifier(String columnId) {
            this.columnId        = columnId;
            this.tableIdentifier = TableIdentifier.of(    getDbmsId(), 
                getSchemaId(), 
                getTableId());
        }
        
        @Override
        public String getDbmsId() {
            return "erp";
        }
        
        @Override
        public String getSchemaId() {
            return "public";
        }
        
        @Override
        public String getTableId() {
            return "仓库";
        }
        
        @Override
        public String getColumnId() {
            return this.columnId;
        }
        
        @Override
        public TableIdentifier<仓库> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}