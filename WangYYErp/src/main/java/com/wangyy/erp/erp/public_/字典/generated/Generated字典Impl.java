package com.wangyy.erp.erp.public_.字典.generated;

import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.util.OptionalUtil;
import com.wangyy.erp.erp.public_.字典.字典;

import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.wangyy.erp.erp.public_.字典.字典}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class Generated字典Impl implements 字典 {
    
    private String 类别;
    private int 会员;
    private String 字典值;
    private int 标识号;
    
    protected Generated字典Impl() {}
    
    @Override
    public String get类别() {
        return 类别;
    }
    
    @Override
    public int get会员() {
        return 会员;
    }
    
    @Override
    public Optional<String> get字典值() {
        return Optional.ofNullable(字典值);
    }
    
    @Override
    public int get标识号() {
        return 标识号;
    }
    
    @Override
    public 字典 set类别(String 类别) {
        this.类别 = 类别;
        return this;
    }
    
    @Override
    public 字典 set会员(int 会员) {
        this.会员 = 会员;
        return this;
    }
    
    @Override
    public 字典 set字典值(String 字典值) {
        this.字典值 = 字典值;
        return this;
    }
    
    @Override
    public 字典 set标识号(int 标识号) {
        this.标识号 = 标识号;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("类别 = "  + Objects.toString(get类别()));
        sj.add("会员 = "  + Objects.toString(get会员()));
        sj.add("字典值 = " + Objects.toString(OptionalUtil.unwrap(get字典值())));
        sj.add("标识号 = " + Objects.toString(get标识号()));
        return "字典Impl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof 字典)) { return false; }
        final 字典 that字典 = (字典)that;
        if (!Objects.equals(this.get类别(), that字典.get类别())) { return false; }
        if (this.get会员() != that字典.get会员()) { return false; }
        if (!Objects.equals(this.get字典值(), that字典.get字典值())) { return false; }
        if (this.get标识号() != that字典.get标识号()) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(get类别());
        hash = 31 * hash + Integer.hashCode(get会员());
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(get字典值()));
        hash = 31 * hash + Integer.hashCode(get标识号());
        return hash;
    }
}