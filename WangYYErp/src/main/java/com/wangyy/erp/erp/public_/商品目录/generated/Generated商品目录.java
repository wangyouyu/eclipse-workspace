package com.wangyy.erp.erp.public_.商品目录.generated;

import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.util.OptionalUtil;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;
import com.wangyy.erp.erp.public_.商品目录.商品目录;

import java.util.Optional;

/**
 * The generated base for the {@link
 * com.wangyy.erp.erp.public_.商品目录.商品目录}-interface representing entities of the
 * {@code 商品目录}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface Generated商品目录 {
    
    /**
     * This Field corresponds to the {@link 商品目录} field that can be obtained
     * using the {@link 商品目录#get商品标识码()} method.
     */
    StringField<商品目录, String> 商品标识码 = StringField.create(
        Identifier.商品标识码,
        商品目录::get商品标识码,
        商品目录::set商品标识码,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link 商品目录} field that can be obtained
     * using the {@link 商品目录#get会员()} method.
     */
    IntField<商品目录, Integer> 会员 = IntField.create(
        Identifier.会员,
        商品目录::get会员,
        商品目录::set会员,
        TypeMapper.primitive(),
        false
    );
    /**
     * This Field corresponds to the {@link 商品目录} field that can be obtained
     * using the {@link 商品目录#get详情()} method.
     */
    StringField<商品目录, String> 详情 = StringField.create(
        Identifier.详情,
        o -> OptionalUtil.unwrap(o.get详情()),
        商品目录::set详情,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link 商品目录} field that can be obtained
     * using the {@link 商品目录#get库存()} method.
     */
    StringField<商品目录, String> 库存 = StringField.create(
        Identifier.库存,
        o -> OptionalUtil.unwrap(o.get库存()),
        商品目录::set库存,
        TypeMapper.identity(),
        false
    );
    
    /**
     * Returns the 商品标识码 of this 商品目录. The 商品标识码 field corresponds to the
     * database column erp.public.商品目录.商品标识码.
     * 
     * @return the 商品标识码 of this 商品目录
     */
    String get商品标识码();
    
    /**
     * Returns the 会员 of this 商品目录. The 会员 field corresponds to the database
     * column erp.public.商品目录.会员.
     * 
     * @return the 会员 of this 商品目录
     */
    int get会员();
    
    /**
     * Returns the 详情 of this 商品目录. The 详情 field corresponds to the database
     * column erp.public.商品目录.详情.
     * 
     * @return the 详情 of this 商品目录
     */
    Optional<String> get详情();
    
    /**
     * Returns the 库存 of this 商品目录. The 库存 field corresponds to the database
     * column erp.public.商品目录.库存.
     * 
     * @return the 库存 of this 商品目录
     */
    Optional<String> get库存();
    
    /**
     * Sets the 商品标识码 of this 商品目录. The 商品标识码 field corresponds to the database
     * column erp.public.商品目录.商品标识码.
     * 
     * @param 商品标识码 to set of this 商品目录
     * @return      this 商品目录 instance
     */
    商品目录 set商品标识码(String 商品标识码);
    
    /**
     * Sets the 会员 of this 商品目录. The 会员 field corresponds to the database column
     * erp.public.商品目录.会员.
     * 
     * @param 会员 to set of this 商品目录
     * @return   this 商品目录 instance
     */
    商品目录 set会员(int 会员);
    
    /**
     * Sets the 详情 of this 商品目录. The 详情 field corresponds to the database column
     * erp.public.商品目录.详情.
     * 
     * @param 详情 to set of this 商品目录
     * @return   this 商品目录 instance
     */
    商品目录 set详情(String 详情);
    
    /**
     * Sets the 库存 of this 商品目录. The 库存 field corresponds to the database column
     * erp.public.商品目录.库存.
     * 
     * @param 库存 to set of this 商品目录
     * @return   this 商品目录 instance
     */
    商品目录 set库存(String 库存);
    
    enum Identifier implements ColumnIdentifier<商品目录> {
        
        商品标识码 ("商品标识码"),
        会员    ("会员"),
        详情    ("详情"),
        库存    ("库存");
        
        private final String columnId;
        private final TableIdentifier<商品目录> tableIdentifier;
        
        Identifier(String columnId) {
            this.columnId        = columnId;
            this.tableIdentifier = TableIdentifier.of(    getDbmsId(), 
                getSchemaId(), 
                getTableId());
        }
        
        @Override
        public String getDbmsId() {
            return "erp";
        }
        
        @Override
        public String getSchemaId() {
            return "public";
        }
        
        @Override
        public String getTableId() {
            return "商品目录";
        }
        
        @Override
        public String getColumnId() {
            return this.columnId;
        }
        
        @Override
        public TableIdentifier<商品目录> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}