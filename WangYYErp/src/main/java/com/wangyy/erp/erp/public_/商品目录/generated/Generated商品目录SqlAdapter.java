package com.wangyy.erp.erp.public_.商品目录.generated;

import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.SqlAdapter;
import com.speedment.runtime.core.db.SqlFunction;
import com.wangyy.erp.erp.public_.商品目录.商品目录;
import com.wangyy.erp.erp.public_.商品目录.商品目录Impl;

import java.sql.ResultSet;
import java.sql.SQLException;

import static com.speedment.common.injector.State.RESOLVED;

/**
 * The generated Sql Adapter for a {@link com.wangyy.erp.erp.public_.商品目录.商品目录}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class Generated商品目录SqlAdapter implements SqlAdapter<商品目录> {
    
    private final TableIdentifier<商品目录> tableIdentifier;
    
    protected Generated商品目录SqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("erp", "public", "商品目录");
    }
    
    protected 商品目录 apply(ResultSet resultSet, int offset) throws SQLException {
        return createEntity()
            .set商品标识码( resultSet.getString(1 + offset))
            .set会员(    resultSet.getInt(2 + offset))
            .set详情(    resultSet.getString(3 + offset))
            .set库存(    resultSet.getString(4 + offset))
            ;
    }
    
    protected 商品目录Impl createEntity() {
        return new 商品目录Impl();
    }
    
    @Override
    public TableIdentifier<商品目录> identifier() {
        return tableIdentifier;
    }
    
    @Override
    public SqlFunction<ResultSet, 商品目录> entityMapper() {
        return entityMapper(0);
    }
    
    @Override
    public SqlFunction<ResultSet, 商品目录> entityMapper(int offset) {
        return rs -> apply(rs, offset);
    }
}