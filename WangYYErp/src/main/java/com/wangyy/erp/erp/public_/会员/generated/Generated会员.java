package com.wangyy.erp.erp.public_.会员.generated;

import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.util.OptionalUtil;
import com.speedment.runtime.field.ComparableField;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;
import com.speedment.runtime.typemapper.time.TimestampToLocalDateTimeMapper;
import com.wangyy.erp.erp.public_.会员.会员;

import java.sql.Timestamp;
import java.time.LocalDateTime;
import java.util.Optional;

/**
 * The generated base for the {@link com.wangyy.erp.erp.public_.会员.会员}-interface
 * representing entities of the {@code 会员}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface Generated会员 {
    
    /**
     * This Field corresponds to the {@link 会员} field that can be obtained using
     * the {@link 会员#get会员标识()} method.
     */
    IntField<会员, Integer> 会员标识 = IntField.create(
        Identifier.会员标识,
        会员::get会员标识,
        会员::set会员标识,
        TypeMapper.primitive(),
        true
    );
    /**
     * This Field corresponds to the {@link 会员} field that can be obtained using
     * the {@link 会员#get日期()} method.
     */
    ComparableField<会员, Timestamp, LocalDateTime> 日期 = ComparableField.create(
        Identifier.日期,
        会员::get日期,
        会员::set日期,
        new TimestampToLocalDateTimeMapper(),
        false
    );
    /**
     * This Field corresponds to the {@link 会员} field that can be obtained using
     * the {@link 会员#get详情()} method.
     */
    StringField<会员, String> 详情 = StringField.create(
        Identifier.详情,
        o -> OptionalUtil.unwrap(o.get详情()),
        会员::set详情,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link 会员} field that can be obtained using
     * the {@link 会员#get付费()} method.
     */
    StringField<会员, String> 付费 = StringField.create(
        Identifier.付费,
        o -> OptionalUtil.unwrap(o.get付费()),
        会员::set付费,
        TypeMapper.identity(),
        false
    );
    
    /**
     * Returns the 会员标识 of this 会员. The 会员标识 field corresponds to the database
     * column erp.public.会员.会员标识.
     * 
     * @return the 会员标识 of this 会员
     */
    int get会员标识();
    
    /**
     * Returns the 日期 of this 会员. The 日期 field corresponds to the database
     * column erp.public.会员.日期.
     * 
     * @return the 日期 of this 会员
     */
    LocalDateTime get日期();
    
    /**
     * Returns the 详情 of this 会员. The 详情 field corresponds to the database
     * column erp.public.会员.详情.
     * 
     * @return the 详情 of this 会员
     */
    Optional<String> get详情();
    
    /**
     * Returns the 付费 of this 会员. The 付费 field corresponds to the database
     * column erp.public.会员.付费.
     * 
     * @return the 付费 of this 会员
     */
    Optional<String> get付费();
    
    /**
     * Sets the 会员标识 of this 会员. The 会员标识 field corresponds to the database
     * column erp.public.会员.会员标识.
     * 
     * @param 会员标识 to set of this 会员
     * @return     this 会员 instance
     */
    会员 set会员标识(int 会员标识);
    
    /**
     * Sets the 日期 of this 会员. The 日期 field corresponds to the database column
     * erp.public.会员.日期.
     * 
     * @param 日期 to set of this 会员
     * @return   this 会员 instance
     */
    会员 set日期(LocalDateTime 日期);
    
    /**
     * Sets the 详情 of this 会员. The 详情 field corresponds to the database column
     * erp.public.会员.详情.
     * 
     * @param 详情 to set of this 会员
     * @return   this 会员 instance
     */
    会员 set详情(String 详情);
    
    /**
     * Sets the 付费 of this 会员. The 付费 field corresponds to the database column
     * erp.public.会员.付费.
     * 
     * @param 付费 to set of this 会员
     * @return   this 会员 instance
     */
    会员 set付费(String 付费);
    
    enum Identifier implements ColumnIdentifier<会员> {
        
        会员标识 ("会员标识"),
        日期   ("日期"),
        详情   ("详情"),
        付费   ("付费");
        
        private final String columnId;
        private final TableIdentifier<会员> tableIdentifier;
        
        Identifier(String columnId) {
            this.columnId        = columnId;
            this.tableIdentifier = TableIdentifier.of(    getDbmsId(), 
                getSchemaId(), 
                getTableId());
        }
        
        @Override
        public String getDbmsId() {
            return "erp";
        }
        
        @Override
        public String getSchemaId() {
            return "public";
        }
        
        @Override
        public String getTableId() {
            return "会员";
        }
        
        @Override
        public String getColumnId() {
            return this.columnId;
        }
        
        @Override
        public TableIdentifier<会员> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}