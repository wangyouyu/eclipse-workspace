package com.wangyy.erp.erp.public_.会员.generated;

import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.util.OptionalUtil;
import com.wangyy.erp.erp.public_.会员.会员;

import java.time.LocalDateTime;
import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.wangyy.erp.erp.public_.会员.会员}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class Generated会员Impl implements 会员 {
    
    private int 会员标识;
    private LocalDateTime 日期;
    private String 详情;
    private String 付费;
    
    protected Generated会员Impl() {}
    
    @Override
    public int get会员标识() {
        return 会员标识;
    }
    
    @Override
    public LocalDateTime get日期() {
        return 日期;
    }
    
    @Override
    public Optional<String> get详情() {
        return Optional.ofNullable(详情);
    }
    
    @Override
    public Optional<String> get付费() {
        return Optional.ofNullable(付费);
    }
    
    @Override
    public 会员 set会员标识(int 会员标识) {
        this.会员标识 = 会员标识;
        return this;
    }
    
    @Override
    public 会员 set日期(LocalDateTime 日期) {
        this.日期 = 日期;
        return this;
    }
    
    @Override
    public 会员 set详情(String 详情) {
        this.详情 = 详情;
        return this;
    }
    
    @Override
    public 会员 set付费(String 付费) {
        this.付费 = 付费;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("会员标识 = " + Objects.toString(get会员标识()));
        sj.add("日期 = "   + Objects.toString(get日期()));
        sj.add("详情 = "   + Objects.toString(OptionalUtil.unwrap(get详情())));
        sj.add("付费 = "   + Objects.toString(OptionalUtil.unwrap(get付费())));
        return "会员Impl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof 会员)) { return false; }
        final 会员 that会员 = (会员)that;
        if (this.get会员标识() != that会员.get会员标识()) { return false; }
        if (!Objects.equals(this.get日期(), that会员.get日期())) { return false; }
        if (!Objects.equals(this.get详情(), that会员.get详情())) { return false; }
        if (!Objects.equals(this.get付费(), that会员.get付费())) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(get会员标识());
        hash = 31 * hash + Objects.hashCode(get日期());
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(get详情()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(get付费()));
        return hash;
    }
}